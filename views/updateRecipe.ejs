<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Nova Receita</title>
</head>

<body>
  <%- include('components/navbar', { user }) %>
  <h1>Editar Receita</h1>
  <form action="/recipes/<%= recipe.id %>" method="POST">
    <label for="name">Nome da Receita</label>
    <input data-testid="nome-receita" name="name" type="text" value="<%= recipe.name %>" />
    <input type="hidden" name="ingredients" id="ingredientsDBField" />
    <ul id="list">
      <% recipe.ingredients.map(ingredient => { %>
        <li class="item"><%= ingredient %></li>
      <% }) %>
    </ul>
    <input data-testid="ingredientes" id="ingredientsInput" type="text" />
    <button data-testid="adicionar-ingrediente" id="addButton" type="button">
      Adicionar Ingredientes
    </button>
    <label for="instructions">Modo de preparo</label>
    <input data-testid="modo-de-preparo" name="instructions" type="text" value="<%= recipe.instructions %>" />
    <a href="/">
      <button>Voltar</button>
    </a>
    <button data-testid="postar-receita" type="submit">Salvar Receita</button>
  </form>
  <script>
    const addButton = document.getElementById('addButton');
    let ingredientInput = document.getElementById('ingredientsInput');
    let ingredientsDBField = document.getElementById('ingredientsDBField');
    let list = document.getElementById('list');
    let ingredientsArray = [];

    const addExistingIngredients = () => {
      const listItem = document.querySelectorAll('.item');

      for (let i = 0; i < listItem.length; i += 1) {
        const deleteButton = document.createElement('button');

        ingredientsArray.push(listItem[i].innerText);
        ingredientsDBField.value = ingredientsArray.join(',');

        deleteButton.innerText = 'Excluir Ingrediente';
        deleteButton.className = 'delete-button';
        listItem[i].insertAdjacentElement('afterend', deleteButton);

        deleteButton.addEventListener('click', () => {
          ingredientsArray = ingredientsArray.filter((ingredient) => ingredient !== listItem[i].innerText);
          ingredientsDBField.value = ingredientsArray.join(',');
          listItem[i].remove();
          deleteButton.remove();
        });
      };
    };

    const addIngredient = () => {
      const li = document.createElement('li');
      li.innerHTML = ingredientInput.value;
      list.appendChild(li);

      ingredientInput.value = '';

      if (!ingredientsArray.includes(li.innerText)) {
        ingredientsArray.push(li.innerText); console.log(ingredientsArray);
      }

      const deleteButton = document.createElement('button');
      deleteButton.innerHTML = 'Excluir Ingrediente';
      deleteButton.className = 'deleteIngredientButton';
      deleteButton.type = 'button'
      list.appendChild(deleteButton);

      ingredientInput.innerText = '';

      const deleteIngredient = () => {
        li.remove();
        deleteButton.remove();
        ingredientsArray.splice( ingredientsArray.indexOf(li.innerText), 1 )
      }

      ingredientsDBField.value = ingredientsArray.join(',');

      deleteButton.addEventListener('click', deleteIngredient);
    };

    window.onload = () => addExistingIngredients();

    addButton.addEventListener('click', addIngredient)
    </script>
</body>
</html>
